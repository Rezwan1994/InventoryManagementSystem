

@model IEnumerable<SFMS.Entity.Product>
@{
    Layout = null;
}

<script>
    var EditUser = function (id) {
        OpenRightToLeftModal("/Products/AddPWM?id=" + id);
    }
    var DeleteUserConfirm = function (Id) {

        OpenConfirmationMessageNew("Confirm?", "Do you  want to delete this product?", function () {

            DeleteUser(Id);
        });
    }

    var NavigatePageListing = function (pagenumber, order, searchText, warehouseId) {
        console.log("fff")
        //var searchText = $(".srch-term").val();
        console.log(searchText)
        $(".loadPWMlist").load("/Products/LoadPWMlist", { PageNumber: pagenumber, SearchText: searchText, Order: order, WarehouseId: warehouseId });
    }

    $(document).ready(function () {
        $(".loadPWMlist").load("/Products/LoadPWMlist");
        //$("#AddUser").click(function () {
        //    OpenRightToLeftModal("/Products/AddPWM");

        //})

        $('.srch-term').keyup(function () {
            var WarehouseId = $("#Warehouse").val();
            NavigatePageListing(1, null, this.value, WarehouseId);
        })

        $('#Warehouse').change(function () {
            NavigatePageListing(1, null, '', this.value);
        })
    });
    var DeleteUser = function (id) {
        console.log("he");
        var url = "/Products/DeletePWM";
        $.ajax({
            type: "POST",
            ajaxStart: function () { },
            url: url,
            data: JSON.stringify({

                Id: id
            }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result) {
                    OpenSuccessMessageNew("Success!", data.message, function () {
                        $(".loadPWMlist").load("/Products/LoadPWMlist");
                    });

                }
                else {
                    OpenErrorMessageNew("Error!", data.message);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }

</script>

<div class="opportunities_table_container">
    <div class="input-group" style="float:left;width:40%">
        <input class="form-control srch-term" placeholder="Find Product Warehouse Map" type="text">
        <span class="input-group-btn">
            <button class="btn btn-secondary src-logo left_things main_search" type="button">
                <i class="glyphicon glyphicon-search"></i>
            </button>
        </span>
    </div>
    <div class="input-group hide-tag" style="float:left;width:40%;padding-left:20px">
        @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { @class = "form-control", id = "Warehouse" })
    </div>
    <button class="btn btn-secondary dropdown-toggle" type="button" id="AddUser" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" onclick="OpenRightToLeftModal('/Products/AddPWM');">
        Map Product Warehouse
    </button>
    <br />
    <br />
    <hr />
    <div class="loadPWMlist">
    </div>
</div>











